#Sun Feb 10 14:00:18 CST 2013
cmdhistory=[";; Switching to N-grams namespace" "(clojure.string/split \\"Hi my name is phou\\" \#\\"\\\\d+\\")" "(clojure.string/split \\"Hi my name is phou\\" \#\\"\\\\s\\")" "(clojure.string/split \\"Hi my name is phou. Yo yo yo.\\" \#\\"\\\\s\\")" "(conj [[a b c] [b c d]] [c d e])" "(conj [[1 2 3] [2 3 4] [3 4 5]] [4 5 6])" "(rest [[1 2 3] [2 3 4] [3 4 5] [4 5 6]]\\n      )" "(take [[1 2 3] [2 3 4] [3 4 5] [4 5 6]])" "(take [[1 2 3] [2 3 4] [3 4 5] [4 5 6]] 3)" "(subvec [[1 2 3] [2 3 4] [3 4 5] [4 5 6]] 1 3)" "(subvec [[1 2 3] [2 3 4] [3 4 5] [4 5 6]] 0 3)" "(subvec [[1 2 3] [2 3 4] [3 4 5] [4 5 6] [5 6 7]] 0 3)" ";; Switching to N-grams namespace" "(tri-grams-helper [\\"hi\\" \\"today\\" \\"is\\" \\"friday\\" \\"and\\" \\"jfklajfdkdlsjafkld\\"])" "(tri-grams-helper [\\"hi\\" \\"today\\" \\"is\\" \\"friday\\" \\"and\\" \\"jfklajfdkdlsjafkld\\" \\"qwertyuiop\\"])" "(load-file ~irela065/Desktop/testClojureFile.txt)" "(load-file \\"~irela065/Desktop/testClojureFile.txt\\")" "(load-file \\"home/irela065/Desktop/testClojureFile.txt\\")" "(load-file \\"/home/irela065/Desktop/testClojureFile.txt\\")" "(slurp \\"/home/irela065/Desktop/testClojureFile.txt\\")" "(clojure.string/split (slurp \\"/home/irela065/Desktop/testClojureFile.txt\\") \#\\"\\\\s\\")" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])" "(frequencies (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"]))" "(frequencies (first (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])))" "(map \#(frequencies %) (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"]))" "(reduce + (map \#(frequencies %) (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])))" "(apply merge-with (map \#(frequencies %) (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])))" "(apply merge-with + (map \#(frequencies %) (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])))" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])" "(tri-grams-helper\\"/home/irela065/Desktop/ClojureFile1.txt\\")" "(tri-grams-helper \\"/home/irela065/Desktop/ClojureFile1.txt\\")" "(tri-grams-helper ((clojure.string/split % \#\\"\\\\s\\") (slurp \\"/home/irela065/Desktop/ClojureFile1.txt\\")))" "(tri-grams-helper (clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureFile1.txt\\") \#\\"\\\\s\\"))" "(clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s\\")" "(clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\w\\")" "(clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\S\\")" "(clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"^\\\\s\\")" "(clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s[A-Za-z9-0]\\")" " (clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s[A-Za-z0-9]\\")" "(clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s[A-Za-z_0-9]\\")" "(filter \#(not (\= [\\"\\"] %)) (clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s\\"))" "(filter \#(not (\= \\"\\" %)) (clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s\\"))" "(vector (filter \#(not (\= \\"\\" %)) (clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s\\")))" "(filterv \#(not (\= \\"\\" %)) (clojure.string/split (slurp \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\") \#\\"\\\\s\\"))" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile1.txt\\"])" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])" ";; Switching to N-grams namespace" "(tri-grams [\\"/home/irela065/Desktop/ClojureRemoveLines.txt\\"])" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])" "(sorted-map-by > (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"]))" "(sorted-map (tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"]))" "(run-timing 1)" "(run-timing 13223)" "(apply merge-with + (map \#(frequencies %) \\n                          (map \#(filterv (fn [x] (not (\= \\"\\" x))) (split-by-whitelines (slurp %))) \\n                               \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\")\\n                          )\\n                        )" "(apply merge-with + (map \#(frequencies %) \\n                             (map \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                                  \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\")))" "(tri-grams \\"/home/irela065/Desktop/ClojureRemoveLines.txt\\")" "(tri-grams [\\"/home/irela065/Desktop/ClojureRemoveLines.txt\\"])" "(apply merge-with + (map \#(frequencies %) \\n                             (map \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                                  [\\"/home/irela065/Desktop/ClojureRemoveLines.txt\\"])))" "(subs {\\"A\\" 1, \\"dog\\" 1, \\"was\\" 1, \\"here\\" 1, \\".\\" 1} 0 4)" "(subs (transient {\\"A\\" 1, \\"dog\\" 1, \\"was\\" 1, \\"here\\" 1, \\".\\" 1}) 1 3)" "(subs (persistent\! {\\"A\\" 1, \\"dog\\" 1, \\"was\\" 1, \\"here\\" 1, \\".\\" 1}) 1 3)" "(subs (persistent\! (transient {\\"A\\" 1, \\"dog\\" 1, \\"was\\" 1, \\"here\\" 1, \\".\\" 1})) 1 3)" "(run-timing 1)" "(count {\\"A\\" 1, \\"dog\\" 1, \\"was\\" 1, \\"here\\" 1, \\".\\" 1})" "(partition 2 {\\"A\\" 1, \\"dog\\" 1, \\"was\\" 1, \\"here\\" 1, \\".\\" 1})" "(apply {} (([\\"A\\" 1] [\\"was\\" 1]) ([\\".\\" 1] [\\"here\\" 1])))" "(apply merge-with + (map \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\"))))" "(apply merge-with + (map \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                                     [\\"/home/irela065/Desktop/ClojureRemoveLines.txt\\"]))" "(run-timing 1)" "(tri-grams-parrallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"] 4)" "(subvec (makeList [\\"A\\" \\"dog\\" \\"was\\" \\"here\\" \\".\\"]) (* blockNumber blockSize) (* (inc blockNumber) blockSize))" "(subvec [\\"A\\" \\"dog\\" \\"was\\" \\"here\\" \\".\\"] (* blockNumber blockSize) (* (inc blockNumber) blockSize))" "(subvec [\\"A\\" \\"dog\\" \\"was\\" \\"here\\" \\".\\"] 2 3)" "(quot 4 2)" "(count [\\"A\\" \\"dog\\" \\"was\\" \\"here\\" \\".\\"])" "(apply merge-with + \\n                          (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (split-by-whitelines (slurp %))) \\n                               [\\"/home/irela065/Desktop/ClojureRemoveLines.txt\\"])\\n                        )" "(apply merge-with + \\n                          (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                               [\\"/home/irela065/Desktop/ClojureRemoveLines.txt\\"])\\n                        )" "(pmap (comp tri-grams-helper [\\"dog\\" \\"was\\"]) (range 2))" "(pmap (comp tri-grams-helper [\\"dog\\" \\"was\\" \\"yo\\" \\"la\\" \\"da\\"]) (range 2))" "(pmap (comp tri-grams-helper [\\"dog\\" \\"was\\" \\"yo\\" \\"la\\" \\"da\\"]) (range 4))" "(pmap (comp tri-grams-helper [\\"dog\\" \\"was\\" \\"yo\\" \\"la\\" \\"da\\"]) (range 2))" "(map (comp tri-grams-helper [\\"dog\\" \\"was\\" \\"yo\\" \\"la\\" \\"da\\"]) (range 2))" "(run-timing 2)" "(run-timing 1)" "(tri-grams-parrallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"] 4)" "(apply merge-with + \\n                          (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                               [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])\\n                        )" "(count (makeList [\\"ever,\\" \\"ever\\" \\"dearly.\\" \\"HELENA\\" \\"If\\" \\"it\\" \\"appear\\" \\"not\\" \\"plain\\" \\"and\\" \\"prove\\" \\"untrue,\\" \\"Deadly\\" \\"divorce\\" \\"step\\" \\"between\\" \\"me\\" \\"and\\" \\"you\!\\" \\"O\\" \\"my\\" \\"dear\\" \\"mother,\\" \\"do\\" \\"I\\" \\"see\\" \\"you\\" \\"living?\\" \\"LAFEU\\" \\"Mine\\" \\"eyes\\" \\"smell\\" \\"onions;\\" \\"I\\" \\"shall\\" \\"weep\\" \\"anon\:\\" \\"To\\" \\"PAROLLES\\" \\"Good\\" \\"Tom\\" \\"Drum,\\" \\"lend\\" \\"me\\" \\"a\\" \\"handkercher\:\\" \\"so,\\" \\"I\\" \\"thank\\" \\"thee\:\\" \\"wait\\" \\"on\\" \\"me\\" \\"home,\\" \\"I'll\\" \\"make\\" \\"sport\\" \\"with\\" \\"thee\:\\" \\"Let\\" \\"thy\\" \\"courtesies\\" \\"alone,\\" \\"they\\" \\"are\\" \\"scurvy\\" \\"ones.\\" \\"KING\\" \\"Let\\" \\"us\\" \\"from\\" \\"point\\" \\"to\\" \\"point\\" \\"this\\" \\"story\\" \\"know,\\" \\"To\\" \\"make\\" \\"the\\" \\"even\\" \\"truth\\" \\"in\\" \\"pleasure\\" \\"flow.\\" \\"To\\" \\"DIANA\\" \\"If\\" \\"thou\\" \\"be'st\\" \\"yet\\" \\"a\\" \\"fresh\\" \\n                  \\"uncropped\\" \\"flower,\\" \\"Choose\\" \\"thou\\" \\"thy\\" \\"husband,\\" \\"and\\" \\"I'll\\" \\"pay\\" \\"thy\\" \\"dower;\\" \\"For\\" \\"I\\" \\"can\\" \\"guess\\" \\"that\\" \\"by\\" \\"thy\\" \\"honest\\" \\"aid\\" \\"Thou\\" \\"keep'st\\" \\"a\\" \\"wife\\" \\"herself,\\" \\"thyself\\" \\"a\\" \\"maid.\\" \\"Of\\" \\"that\\" \\"and\\" \\"all\\" \\"the\\" \\"progress,\\" \\"more\\" \\"or\\" \\"less,\\" \\"Resolvedly\\" \\"more\\" \\"leisure\\" \\"shall\\" \\"express\:\\" \\"All\\" \\"yet\\" \\"seems\\" \\"well;\\" \\"and\\" \\"if\\" \\"it\\" \\"end\\" \\"so\\" \\"meet,\\" \\"The\\" \\"bitter\\" \\"past,\\" \\"more\\" \\"welcome\\" \\"is\\" \\"the\\" \\"sweet.\\" \\"Flourish\\" \\"EPILOGUE\\" \\"KING\\" \\"The\\" \\"king's\\" \\"a\\" \\"beggar,\\" \\"now\\" \\"the\\" \\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\" \\"please\\" \\"you,\\" \\"day\\" \\"exceeding\\" \\"day\:\\" \\"Ours\\" \\"be\\" \\"your\\" \\"patience\\" \\"then,\\" \\"and\\" \\"yours\\" \\"our\\" \\"parts;\\" \\"Your\\" \\"gentle\\" \\"hands\\" \\"lend\\" \\"us,\\" \\"and\\" \\"take\\" \\"our\\" \\"hearts.\\" \\"Exeunt\\"]))" "(count [\\"ever,\\" \\"ever\\" \\"dearly.\\" \\"HELENA\\" \\"If\\" \\"it\\" \\"appear\\" \\"not\\" \\"plain\\" \\"and\\" \\"prove\\" \\"untrue,\\" \\"Deadly\\" \\"divorce\\" \\"step\\" \\"between\\" \\"me\\" \\"and\\" \\"you\!\\" \\"O\\" \\"my\\" \\"dear\\" \\"mother,\\" \\"do\\" \\"I\\" \\"see\\" \\"you\\" \\"living?\\" \\"LAFEU\\" \\"Mine\\" \\"eyes\\" \\"smell\\" \\"onions;\\" \\"I\\" \\"shall\\" \\"weep\\" \\"anon\:\\" \\"To\\" \\"PAROLLES\\" \\"Good\\" \\"Tom\\" \\"Drum,\\" \\"lend\\" \\"me\\" \\"a\\" \\"handkercher\:\\" \\"so,\\" \\"I\\" \\"thank\\" \\"thee\:\\" \\"wait\\" \\"on\\" \\"me\\" \\"home,\\" \\"I'll\\" \\"make\\" \\"sport\\" \\"with\\" \\"thee\:\\" \\"Let\\" \\"thy\\" \\"courtesies\\" \\"alone,\\" \\"they\\" \\"are\\" \\"scurvy\\" \\"ones.\\" \\"KING\\" \\"Let\\" \\"us\\" \\"from\\" \\"point\\" \\"to\\" \\"point\\" \\"this\\" \\"story\\" \\"know,\\" \\"To\\" \\"make\\" \\"the\\" \\"even\\" \\"truth\\" \\"in\\" \\"pleasure\\" \\"flow.\\" \\"To\\" \\"DIANA\\" \\"If\\" \\"thou\\" \\"be'st\\" \\"yet\\" \\"a\\" \\"fresh\\" \\n                     \\"uncropped\\" \\"flower,\\" \\"Choose\\" \\"thou\\" \\"thy\\" \\"husband,\\" \\"and\\" \\"I'll\\" \\"pay\\" \\"thy\\" \\"dower;\\" \\"For\\" \\"I\\" \\"can\\" \\"guess\\" \\"that\\" \\"by\\" \\"thy\\" \\"honest\\" \\"aid\\" \\"Thou\\" \\"keep'st\\" \\"a\\" \\"wife\\" \\"herself,\\" \\"thyself\\" \\"a\\" \\"maid.\\" \\"Of\\" \\"that\\" \\"and\\" \\"all\\" \\"the\\" \\"progress,\\" \\"more\\" \\"or\\" \\"less,\\" \\"Resolvedly\\" \\"more\\" \\"leisure\\" \\"shall\\" \\"express\:\\" \\"All\\" \\"yet\\" \\"seems\\" \\"well;\\" \\"and\\" \\"if\\" \\"it\\" \\"end\\" \\"so\\" \\"meet,\\" \\"The\\" \\"bitter\\" \\"past,\\" \\"more\\" \\"welcome\\" \\"is\\" \\"the\\" \\"sweet.\\" \\"Flourish\\" \\"EPILOGUE\\" \\"KING\\" \\"The\\" \\"king's\\" \\"a\\" \\"beggar,\\" \\"now\\" \\"the\\" \\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\" \\"please\\" \\"you,\\" \\"day\\" \\"exceeding\\" \\"day\:\\" \\"Ours\\" \\"be\\" \\"your\\" \\"patience\\" \\"then,\\" \\"and\\" \\"yours\\" \\"our\\" \\"parts;\\" \\"Your\\" \\"gentle\\" \\"hands\\" \\"lend\\" \\"us,\\" \\"and\\" \\"take\\" \\"our\\" \\"hearts.\\" \\"Exeunt\\"])" "(qout 209/4)" "(quot 208/4)" "(quot 209 4)" "(subvec [\\"ever,\\" \\"ever\\" \\"dearly.\\" \\"HELENA\\" \\"If\\" \\"it\\" \\"appear\\" \\"not\\" \\"plain\\" \\"and\\" \\"prove\\" \\"untrue,\\" \\"Deadly\\" \\"divorce\\" \\"step\\" \\"between\\" \\"me\\" \\"and\\" \\"you\!\\" \\"O\\" \\"my\\" \\"dear\\" \\"mother,\\" \\"do\\" \\"I\\" \\"see\\" \\"you\\" \\"living?\\" \\"LAFEU\\" \\"Mine\\" \\"eyes\\" \\"smell\\" \\"onions;\\" \\"I\\" \\"shall\\" \\"weep\\" \\"anon\:\\" \\"To\\" \\"PAROLLES\\" \\"Good\\" \\"Tom\\" \\"Drum,\\" \\"lend\\" \\"me\\" \\"a\\" \\"handkercher\:\\" \\"so,\\" \\"I\\" \\"thank\\" \\"thee\:\\" \\"wait\\" \\"on\\" \\"me\\" \\"home,\\" \\"I'll\\" \\"make\\" \\"sport\\" \\"with\\" \\"thee\:\\" \\"Let\\" \\"thy\\" \\"courtesies\\" \\"alone,\\" \\"they\\" \\"are\\" \\"scurvy\\" \\"ones.\\" \\"KING\\" \\"Let\\" \\"us\\" \\"from\\" \\"point\\" \\"to\\" \\"point\\" \\"this\\" \\"story\\" \\"know,\\" \\"To\\" \\"make\\" \\"the\\" \\"even\\" \\"truth\\" \\"in\\" \\"pleasure\\" \\"flow.\\" \\"To\\" \\"DIANA\\" \\"If\\" \\"thou\\" \\"be'st\\" \\"yet\\" \\"a\\" \\"fresh\\" \\n                        \\"uncropped\\" \\"flower,\\" \\"Choose\\" \\"thou\\" \\"thy\\" \\"husband,\\" \\"and\\" \\"I'll\\" \\"pay\\" \\"thy\\" \\"dower;\\" \\"For\\" \\"I\\" \\"can\\" \\"guess\\" \\"that\\" \\"by\\" \\"thy\\" \\"honest\\" \\"aid\\" \\"Thou\\" \\"keep'st\\" \\"a\\" \\"wife\\" \\"herself,\\" \\"thyself\\" \\"a\\" \\"maid.\\" \\"Of\\" \\"that\\" \\"and\\" \\"all\\" \\"the\\" \\"progress,\\" \\"more\\" \\"or\\" \\"less,\\" \\"Resolvedly\\" \\"more\\" \\"leisure\\" \\"shall\\" \\"express\:\\" \\"All\\" \\"yet\\" \\"seems\\" \\"well;\\" \\"and\\" \\"if\\" \\"it\\" \\"end\\" \\"so\\" \\"meet,\\" \\"The\\" \\"bitter\\" \\"past,\\" \\"more\\" \\"welcome\\" \\"is\\" \\"the\\" \\"sweet.\\" \\"Flourish\\" \\"EPILOGUE\\" \\"KING\\" \\"The\\" \\"king's\\" \\"a\\" \\"beggar,\\" \\"now\\" \\"the\\" \\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\" \\"please\\" \\"you,\\" \\"day\\" \\"exceeding\\" \\"day\:\\" \\"Ours\\" \\"be\\" \\"your\\" \\"patience\\" \\"then,\\" \\"and\\" \\"yours\\" \\"our\\" \\"parts;\\" \\"Your\\" \\"gentle\\" \\"hands\\" \\"lend\\" \\"us,\\" \\"and\\" \\"take\\" \\"our\\" \\"hearts.\\" \\"Exeunt\\"] 0 52)" "(pmap (comp tri-grams-helper \#(subvec [\\"ever,\\" \\"ever\\" \\"dearly.\\" \\"HELENA\\" \\"If\\" \\"it\\" \\"appear\\" \\"not\\" \\"plain\\" \\"and\\" \\"prove\\" \\"untrue,\\" \\"Deadly\\" \\"divorce\\" \\"step\\" \\"between\\" \\"me\\" \\"and\\" \\"you\!\\" \\"O\\" \\"my\\" \\"dear\\" \\"mother,\\" \\"do\\" \\"I\\" \\"see\\" \\"you\\" \\"living?\\" \\"LAFEU\\" \\"Mine\\" \\"eyes\\" \\"smell\\" \\"onions;\\" \\"I\\" \\"shall\\" \\"weep\\" \\"anon\:\\" \\"To\\" \\"PAROLLES\\" \\"Good\\" \\"Tom\\" \\"Drum,\\" \\"lend\\" \\"me\\" \\"a\\" \\"handkercher\:\\" \\"so,\\" \\"I\\" \\"thank\\" \\"thee\:\\" \\"wait\\" \\"on\\" \\"me\\" \\"home,\\" \\"I'll\\" \\"make\\" \\"sport\\" \\"with\\" \\"thee\:\\" \\"Let\\" \\"thy\\" \\"courtesies\\" \\"alone,\\" \\"they\\" \\"are\\" \\"scurvy\\" \\"ones.\\" \\"KING\\" \\"Let\\" \\"us\\" \\"from\\" \\"point\\" \\"to\\" \\"point\\" \\"this\\" \\"story\\" \\"know,\\" \\"To\\" \\"make\\" \\"the\\" \\"even\\" \\"truth\\" \\"in\\" \\"pleasure\\" \\"flow.\\" \\"To\\" \\"DIANA\\" \\"If\\" \\"thou\\" \\"be'st\\" \\"yet\\" \\"a\\" \\"fresh\\" \\n                        \\"uncropped\\" \\"flower,\\" \\"Choose\\" \\"thou\\" \\"thy\\" \\"husband,\\" \\"and\\" \\"I'll\\" \\"pay\\" \\"thy\\" \\"dower;\\" \\"For\\" \\"I\\" \\"can\\" \\"guess\\" \\"that\\" \\"by\\" \\"thy\\" \\"honest\\" \\"aid\\" \\"Thou\\" \\"keep'st\\" \\"a\\" \\"wife\\" \\"herself,\\" \\"thyself\\" \\"a\\" \\"maid.\\" \\"Of\\" \\"that\\" \\"and\\" \\"all\\" \\"the\\" \\"progress,\\" \\"more\\" \\"or\\" \\"less,\\" \\"Resolvedly\\" \\"more\\" \\"leisure\\" \\"shall\\" \\"express\:\\" \\"All\\" \\"yet\\" \\"seems\\" \\"well;\\" \\"and\\" \\"if\\" \\"it\\" \\"end\\" \\"so\\" \\"meet,\\" \\"The\\" \\"bitter\\" \\"past,\\" \\"more\\" \\"welcome\\" \\"is\\" \\"the\\" \\"sweet.\\" \\"Flourish\\" \\"EPILOGUE\\" \\"KING\\" \\"The\\" \\"king's\\" \\"a\\" \\"beggar,\\" \\"now\\" \\"the\\" \\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\" \\"please\\" \\"you,\\" \\"day\\" \\"exceeding\\" \\"day\:\\" \\"Ours\\" \\"be\\" \\"your\\" \\"patience\\" \\"then,\\" \\"and\\" \\"yours\\" \\"our\\" \\"parts;\\" \\"Your\\" \\"gentle\\" \\"hands\\" \\"lend\\" \\"us,\\" \\"and\\" \\"take\\" \\"our\\" \\"hearts.\\" \\"Exeunt\\"] (* % 52) (* (inc %) 52))) \\n(range 4))" "(apply merge-with + (pmap (comp tri-grams-helper \#(subvec [\\"ever,\\" \\"ever\\" \\"dearly.\\" \\"HELENA\\" \\"If\\" \\"it\\" \\"appear\\" \\"not\\" \\"plain\\" \\"and\\" \\"prove\\" \\"untrue,\\" \\"Deadly\\" \\"divorce\\" \\"step\\" \\"between\\" \\"me\\" \\"and\\" \\"you\!\\" \\"O\\" \\"my\\" \\"dear\\" \\"mother,\\" \\"do\\" \\"I\\" \\"see\\" \\"you\\" \\"living?\\" \\"LAFEU\\" \\"Mine\\" \\"eyes\\" \\"smell\\" \\"onions;\\" \\"I\\" \\"shall\\" \\"weep\\" \\"anon\:\\" \\"To\\" \\"PAROLLES\\" \\"Good\\" \\"Tom\\" \\"Drum,\\" \\"lend\\" \\"me\\" \\"a\\" \\"handkercher\:\\" \\"so,\\" \\"I\\" \\"thank\\" \\"thee\:\\" \\"wait\\" \\"on\\" \\"me\\" \\"home,\\" \\"I'll\\" \\"make\\" \\"sport\\" \\"with\\" \\"thee\:\\" \\"Let\\" \\"thy\\" \\"courtesies\\" \\"alone,\\" \\"they\\" \\"are\\" \\"scurvy\\" \\"ones.\\" \\"KING\\" \\"Let\\" \\"us\\" \\"from\\" \\"point\\" \\"to\\" \\"point\\" \\"this\\" \\"story\\" \\"know,\\" \\"To\\" \\"make\\" \\"the\\" \\"even\\" \\"truth\\" \\"in\\" \\"pleasure\\" \\"flow.\\" \\"To\\" \\"DIANA\\" \\"If\\" \\"thou\\" \\"be'st\\" \\"yet\\" \\"a\\" \\"fresh\\" \\n                           \\"uncropped\\" \\"flower,\\" \\"Choose\\" \\"thou\\" \\"thy\\" \\"husband,\\" \\"and\\" \\"I'll\\" \\"pay\\" \\"thy\\" \\"dower;\\" \\"For\\" \\"I\\" \\"can\\" \\"guess\\" \\"that\\" \\"by\\" \\"thy\\" \\"honest\\" \\"aid\\" \\"Thou\\" \\"keep'st\\" \\"a\\" \\"wife\\" \\"herself,\\" \\"thyself\\" \\"a\\" \\"maid.\\" \\"Of\\" \\"that\\" \\"and\\" \\"all\\" \\"the\\" \\"progress,\\" \\"more\\" \\"or\\" \\"less,\\" \\"Resolvedly\\" \\"more\\" \\"leisure\\" \\"shall\\" \\"express\:\\" \\"All\\" \\"yet\\" \\"seems\\" \\"well;\\" \\"and\\" \\"if\\" \\"it\\" \\"end\\" \\"so\\" \\"meet,\\" \\"The\\" \\"bitter\\" \\"past,\\" \\"more\\" \\"welcome\\" \\"is\\" \\"the\\" \\"sweet.\\" \\"Flourish\\" \\"EPILOGUE\\" \\"KING\\" \\"The\\" \\"king's\\" \\"a\\" \\"beggar,\\" \\"now\\" \\"the\\" \\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\" \\"please\\" \\"you,\\" \\"day\\" \\"exceeding\\" \\"day\:\\" \\"Ours\\" \\"be\\" \\"your\\" \\"patience\\" \\"then,\\" \\"and\\" \\"yours\\" \\"our\\" \\"parts;\\" \\"Your\\" \\"gentle\\" \\"hands\\" \\"lend\\" \\"us,\\" \\"and\\" \\"take\\" \\"our\\" \\"hearts.\\" \\"Exeunt\\"] (* % 52) (* (inc %) 52))) \\n   (range 4)))" "(run-timing 2)" "(pmap (comp tri-grams-helper \#(subvec [\\"ever,\\" \\"ever\\" \\"dearly.\\" \\"HELENA\\" \\"If\\" \\"it\\" \\"appear\\" \\"not\\" \\"plain\\" \\"and\\" \\"prove\\" \\"untrue,\\" \\"Deadly\\" \\"divorce\\" \\"step\\" \\"between\\" \\"me\\" \\"and\\" \\"you\!\\" \\"O\\" \\"my\\" \\"dear\\" \\"mother,\\" \\"do\\" \\"I\\" \\"see\\" \\"you\\" \\"living?\\" \\"LAFEU\\" \\"Mine\\" \\"eyes\\" \\"smell\\" \\"onions;\\" \\"I\\" \\"shall\\" \\"weep\\" \\"anon\:\\" \\"To\\" \\"PAROLLES\\" \\"Good\\" \\"Tom\\" \\"Drum,\\" \\"lend\\" \\"me\\" \\"a\\" \\"handkercher\:\\" \\"so,\\" \\"I\\" \\"thank\\" \\"thee\:\\" \\"wait\\" \\"on\\" \\"me\\" \\"home,\\" \\"I'll\\" \\"make\\" \\"sport\\" \\"with\\" \\"thee\:\\" \\"Let\\" \\"thy\\" \\"courtesies\\" \\"alone,\\" \\"they\\" \\"are\\" \\"scurvy\\" \\"ones.\\" \\"KING\\" \\"Let\\" \\"us\\" \\"from\\" \\"point\\" \\"to\\" \\"point\\" \\"this\\" \\"story\\" \\"know,\\" \\"To\\" \\"make\\" \\"the\\" \\"even\\" \\"truth\\" \\"in\\" \\"pleasure\\" \\"flow.\\" \\"To\\" \\"DIANA\\" \\"If\\" \\"thou\\" \\"be'st\\" \\"yet\\" \\"a\\" \\"fresh\\" \\n                              \\"uncropped\\" \\"flower,\\" \\"Choose\\" \\"thou\\" \\"thy\\" \\"husband,\\" \\"and\\" \\"I'll\\" \\"pay\\" \\"thy\\" \\"dower;\\" \\"For\\" \\"I\\" \\"can\\" \\"guess\\" \\"that\\" \\"by\\" \\"thy\\" \\"honest\\" \\"aid\\" \\"Thou\\" \\"keep'st\\" \\"a\\" \\"wife\\" \\"herself,\\" \\"thyself\\" \\"a\\" \\"maid.\\" \\"Of\\" \\"that\\" \\"and\\" \\"all\\" \\"the\\" \\"progress,\\" \\"more\\" \\"or\\" \\"less,\\" \\"Resolvedly\\" \\"more\\" \\"leisure\\" \\"shall\\" \\"express\:\\" \\"All\\" \\"yet\\" \\"seems\\" \\"well;\\" \\"and\\" \\"if\\" \\"it\\" \\"end\\" \\"so\\" \\"meet,\\" \\"The\\" \\"bitter\\" \\"past,\\" \\"more\\" \\"welcome\\" \\"is\\" \\"the\\" \\"sweet.\\" \\"Flourish\\" \\"EPILOGUE\\" \\"KING\\" \\"The\\" \\"king's\\" \\"a\\" \\"beggar,\\" \\"now\\" \\"the\\" \\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\" \\"please\\" \\"you,\\" \\"day\\" \\"exceeding\\" \\"day\:\\" \\"Ours\\" \\"be\\" \\"your\\" \\"patience\\" \\"then,\\" \\"and\\" \\"yours\\" \\"our\\" \\"parts;\\" \\"Your\\" \\"gentle\\" \\"hands\\" \\"lend\\" \\"us,\\" \\"and\\" \\"take\\" \\"our\\" \\"hearts.\\" \\"Exeunt\\"] (* % 52) (* (inc %) 52))) \\n      (range 4))" ";; Switching to N-grams namespace" "(tri-grams-parrallel [\\"/home/irela065/Desktop/ClojureRemoveLines.txt\\"] 2)" ";; Switching to N-grams namespace" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile2.txt\\"])" "(run-timing 1)" "(tri-grams-parallel [\\"fjdkla\\" \\"fjeidlwruelm\\" \\"fjdksj\\" \\"89jkeo\\" \\"jfkdljkfdj\\" \\"fj\\" \\"fds\\" \\"2r4e\\" \\"gfat4gfdzg\\" \\"t984ukdlj\\" \\"t48jglmagkj\\" \\n                     \\"t4uiepowlmgf\\" \\"tueowjfke\\"] 4)" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"] 4)" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"] [4])" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\" \\"/home/irela065/Desktop/ClojureFile1.txt\\"] 4)" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"] 4)" "(apply merge-with + \\n                          (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                               [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])\\n                        )" "(count (apply merge-with + \\n                          (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                               [\\"/home/irela065/Desktop/ClojureFile.txt\\"])\\n                        ))" "(count (apply merge-with + \\n                             (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                                  [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])\\n                           ))" "(subvec (apply merge-with + \\n                          (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                               [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])\\n                        ) 245 3)" "(subvec (apply merge-with + \\n                             (pmap \#(filterv (fn [x] (not (\= \\"\\" x))) (clojure.string/split (slurp %) \#\\"\\\\s\\")) \\n                                  [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])\\n                           ) 10 10)" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"] 3)" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\n                   \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\" \\"All\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\"])" "(tri-grams-helper [\\"play\\" \\"is\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\n                      \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\" \\"All\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\"])" "(tri-grams-helper [\\"play\\" \\"is\\"])" "(tri-grams-helper [\\"play\\"])" "(tri-grams-helper [])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\" \\"fds\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\n                         \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\"])" "(tri-grams-helper [\\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\n                            \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\"])" "(tri-grams-parallel [\\"play\\" \\"is\\" \\"done\:\\" \\"All\\" \\"is\\" \\"well\\" \\"ended,\\" \\"if\\" \\"this\\" \\"suit\\" \\"be\\" \\"won,\\" \\n                               \\"That\\" \\"you\\" \\"express\\" \\"content;\\" \\"which\\" \\"we\\" \\"will\\" \\"pay,\\" \\"With\\" \\"strife\\" \\"to\\"] 2)" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile.txt\\"] 2)" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"] 2)" "(tri-grams-parallel [\\"/home/irela065/Desktop/ClojureFile1.txt\\"] (int 2))" "(tri-grams-parallel 2 [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])" "(tri-grams-parallel (int 2) [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])" "(tri-grams-parallel 2 [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])" "(tri-grams [\\"/home/irela065/Desktop/ClojureFile1.txt\\"])"]
eclipse.preferences.version=1
